# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rrc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='rrc.proto',
  package='lte.rrc',
  serialized_pb=_b('\n\trrc.proto\x12\x07lte.rrc\"\x17\n\tAttachReq\x12\n\n\x02id\x18\x01 \x02(\x05\"\x1c\n\x03SIB\x12\x15\n\rcell_identity\x18\x01 \x02(\x05\"\x1d\n\x04SIB1\x12\x15\n\rcell_identity\x18\x01 \x02(\x05\"_\n\nAttachResp\x12\n\n\x02id\x18\x01 \x02(\x05\x12*\n\x06status\x18\x02 \x02(\x0e\x32\x1a.lte.rrc.AttachResp.Status\"\x19\n\x06Status\x12\x06\n\x02OK\x10\x00\x12\x07\n\x03NOK\x10\x01\"\x17\n\tDetachReq\x12\n\n\x02id\x18\x01 \x02(\x05\"_\n\nDetachResp\x12\n\n\x02id\x18\x01 \x02(\x05\x12*\n\x06status\x18\x02 \x02(\x0e\x32\x1a.lte.rrc.DetachResp.Status\"\x19\n\x06Status\x12\x06\n\x02OK\x10\x00\x12\x07\n\x03NOK\x10\x01\"\xd5\x01\n\x03RRC\x12(\n\nattach_req\x18\x01 \x01(\x0b\x32\x12.lte.rrc.AttachReqH\x00\x12*\n\x0b\x61ttach_resp\x18\x02 \x01(\x0b\x32\x13.lte.rrc.AttachRespH\x00\x12(\n\ndetach_req\x18\x03 \x01(\x0b\x32\x12.lte.rrc.DetachReqH\x00\x12*\n\x0b\x64\x65tach_resp\x18\x04 \x01(\x0b\x32\x13.lte.rrc.DetachRespH\x00\x12\x1b\n\x03sib\x18\x05 \x01(\x0b\x32\x0c.lte.rrc.SIBH\x00\x42\x05\n\x03msg')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_ATTACHRESP_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='lte.rrc.AttachResp.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOK', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=178,
  serialized_end=203,
)
_sym_db.RegisterEnumDescriptor(_ATTACHRESP_STATUS)

_DETACHRESP_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='lte.rrc.DetachResp.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOK', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=178,
  serialized_end=203,
)
_sym_db.RegisterEnumDescriptor(_DETACHRESP_STATUS)


_ATTACHREQ = _descriptor.Descriptor(
  name='AttachReq',
  full_name='lte.rrc.AttachReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='lte.rrc.AttachReq.id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=45,
)


_SIB = _descriptor.Descriptor(
  name='SIB',
  full_name='lte.rrc.SIB',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cell_identity', full_name='lte.rrc.SIB.cell_identity', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=75,
)


_SIB1 = _descriptor.Descriptor(
  name='SIB1',
  full_name='lte.rrc.SIB1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cell_identity', full_name='lte.rrc.SIB1.cell_identity', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=77,
  serialized_end=106,
)


_ATTACHRESP = _descriptor.Descriptor(
  name='AttachResp',
  full_name='lte.rrc.AttachResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='lte.rrc.AttachResp.id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='lte.rrc.AttachResp.status', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ATTACHRESP_STATUS,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=108,
  serialized_end=203,
)


_DETACHREQ = _descriptor.Descriptor(
  name='DetachReq',
  full_name='lte.rrc.DetachReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='lte.rrc.DetachReq.id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=205,
  serialized_end=228,
)


_DETACHRESP = _descriptor.Descriptor(
  name='DetachResp',
  full_name='lte.rrc.DetachResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='lte.rrc.DetachResp.id', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='lte.rrc.DetachResp.status', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _DETACHRESP_STATUS,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=230,
  serialized_end=325,
)


_RRC = _descriptor.Descriptor(
  name='RRC',
  full_name='lte.rrc.RRC',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='attach_req', full_name='lte.rrc.RRC.attach_req', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attach_resp', full_name='lte.rrc.RRC.attach_resp', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='detach_req', full_name='lte.rrc.RRC.detach_req', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='detach_resp', full_name='lte.rrc.RRC.detach_resp', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sib', full_name='lte.rrc.RRC.sib', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='msg', full_name='lte.rrc.RRC.msg',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=328,
  serialized_end=541,
)

_ATTACHRESP.fields_by_name['status'].enum_type = _ATTACHRESP_STATUS
_ATTACHRESP_STATUS.containing_type = _ATTACHRESP
_DETACHRESP.fields_by_name['status'].enum_type = _DETACHRESP_STATUS
_DETACHRESP_STATUS.containing_type = _DETACHRESP
_RRC.fields_by_name['attach_req'].message_type = _ATTACHREQ
_RRC.fields_by_name['attach_resp'].message_type = _ATTACHRESP
_RRC.fields_by_name['detach_req'].message_type = _DETACHREQ
_RRC.fields_by_name['detach_resp'].message_type = _DETACHRESP
_RRC.fields_by_name['sib'].message_type = _SIB
_RRC.oneofs_by_name['msg'].fields.append(
  _RRC.fields_by_name['attach_req'])
_RRC.fields_by_name['attach_req'].containing_oneof = _RRC.oneofs_by_name['msg']
_RRC.oneofs_by_name['msg'].fields.append(
  _RRC.fields_by_name['attach_resp'])
_RRC.fields_by_name['attach_resp'].containing_oneof = _RRC.oneofs_by_name['msg']
_RRC.oneofs_by_name['msg'].fields.append(
  _RRC.fields_by_name['detach_req'])
_RRC.fields_by_name['detach_req'].containing_oneof = _RRC.oneofs_by_name['msg']
_RRC.oneofs_by_name['msg'].fields.append(
  _RRC.fields_by_name['detach_resp'])
_RRC.fields_by_name['detach_resp'].containing_oneof = _RRC.oneofs_by_name['msg']
_RRC.oneofs_by_name['msg'].fields.append(
  _RRC.fields_by_name['sib'])
_RRC.fields_by_name['sib'].containing_oneof = _RRC.oneofs_by_name['msg']
DESCRIPTOR.message_types_by_name['AttachReq'] = _ATTACHREQ
DESCRIPTOR.message_types_by_name['SIB'] = _SIB
DESCRIPTOR.message_types_by_name['SIB1'] = _SIB1
DESCRIPTOR.message_types_by_name['AttachResp'] = _ATTACHRESP
DESCRIPTOR.message_types_by_name['DetachReq'] = _DETACHREQ
DESCRIPTOR.message_types_by_name['DetachResp'] = _DETACHRESP
DESCRIPTOR.message_types_by_name['RRC'] = _RRC

AttachReq = _reflection.GeneratedProtocolMessageType('AttachReq', (_message.Message,), dict(
  DESCRIPTOR = _ATTACHREQ,
  __module__ = 'rrc_pb2'
  # @@protoc_insertion_point(class_scope:lte.rrc.AttachReq)
  ))
_sym_db.RegisterMessage(AttachReq)

SIB = _reflection.GeneratedProtocolMessageType('SIB', (_message.Message,), dict(
  DESCRIPTOR = _SIB,
  __module__ = 'rrc_pb2'
  # @@protoc_insertion_point(class_scope:lte.rrc.SIB)
  ))
_sym_db.RegisterMessage(SIB)

SIB1 = _reflection.GeneratedProtocolMessageType('SIB1', (_message.Message,), dict(
  DESCRIPTOR = _SIB1,
  __module__ = 'rrc_pb2'
  # @@protoc_insertion_point(class_scope:lte.rrc.SIB1)
  ))
_sym_db.RegisterMessage(SIB1)

AttachResp = _reflection.GeneratedProtocolMessageType('AttachResp', (_message.Message,), dict(
  DESCRIPTOR = _ATTACHRESP,
  __module__ = 'rrc_pb2'
  # @@protoc_insertion_point(class_scope:lte.rrc.AttachResp)
  ))
_sym_db.RegisterMessage(AttachResp)

DetachReq = _reflection.GeneratedProtocolMessageType('DetachReq', (_message.Message,), dict(
  DESCRIPTOR = _DETACHREQ,
  __module__ = 'rrc_pb2'
  # @@protoc_insertion_point(class_scope:lte.rrc.DetachReq)
  ))
_sym_db.RegisterMessage(DetachReq)

DetachResp = _reflection.GeneratedProtocolMessageType('DetachResp', (_message.Message,), dict(
  DESCRIPTOR = _DETACHRESP,
  __module__ = 'rrc_pb2'
  # @@protoc_insertion_point(class_scope:lte.rrc.DetachResp)
  ))
_sym_db.RegisterMessage(DetachResp)

RRC = _reflection.GeneratedProtocolMessageType('RRC', (_message.Message,), dict(
  DESCRIPTOR = _RRC,
  __module__ = 'rrc_pb2'
  # @@protoc_insertion_point(class_scope:lte.rrc.RRC)
  ))
_sym_db.RegisterMessage(RRC)


# @@protoc_insertion_point(module_scope)
